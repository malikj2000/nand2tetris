@256
D=A
@SP
M=D
(.Sys.init)
(.Main.fibonacci)
// C_PUSHargument0
D=0
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSHconstant2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS0
D;JLT
D=0
@END1
0;JMP
(LESS0)
D=1
(END1)
@SP
A=M
M=D
@SP
M=M+1
//if-goto N_LT_2
@SP
M=M-1
A=M
D=M
@TRUE2
D;JGT
@END3
0;JMP
(TRUE2)
@.Main.fibonacci$N_LT_2
0;JMP
(END3)
//goto N_GE_2
@.Main.fibonacci$N_GE_2
0;JMP
//label N_LT_2
(.Main.fibonacci$N_LT_2)
// C_PUSHargument0
D=0
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
AM=M-1
D=M
@THAT
M=D
@endFrame
AM=M-1
D=M
@THIS
M=D
@endFrame
AM=M-1
D=M
@ARG
M=D
@endFrame
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
//label N_GE_2
(.Main.fibonacci$N_GE_2)
// C_PUSHargument0
D=0
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSHconstant2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci1
@.Main.fibonacci$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=A
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(.Main.fibonacci$ret.0)
// C_PUSHargument0
D=0
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSHconstant1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci1
@.Main.fibonacci$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=A
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(.Main.fibonacci$ret.1)
// add                    // returns fib(n - 1) + fib(n - 2)
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
AM=M-1
D=M
@THAT
M=D
@endFrame
AM=M-1
D=M
@THIS
M=D
@endFrame
AM=M-1
D=M
@ARG
M=D
@endFrame
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
(.Sys.init)
// C_PUSHconstant4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci1
@.Sys.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=A
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(.Sys.init$ret.2)
//label END
(.Sys.init$END)
//goto END
@.Sys.init$END
0;JMP
